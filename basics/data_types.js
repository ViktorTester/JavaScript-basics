                                        // Типы данных


// Типы данных — это классификация различных видов информации, которую компьютер может
// обрабатывать и хранить. Типы данных определяют, какие операции можно выполнять с данными,
// и как компьютер должен интерпретировать их.
// Например, компьютер по-разному работает с числами и строками.

// Типы данных делятся на
// -Примитивные (Числа, Строки, Булевые значения, null, undefined, Символы)
// -Составные (Объекты, массивы, и т.д.)


                                        // Типы данных, которые нужно знать на данном этапе:

//      ---Строка (String)
// Используется для представления текстовых значений, заключенных
// в кавычки (одинарные или двойные). Примеры: 'Привет', "5".
// -5 (без кавычек) относится к типу Число.
// -“5” (с кавычками) относится к типу Строка.

//      ---Число (Number)
// Используется для представления числовых значений. Примеры: 10, 3.14, -5.
// Над числами можно производить математические операции, например умножение *,
// деление /, сложение +, вычитание - и так далее. Мы рассмотрим их подробнее
// в уроке "Математические операции".

// Существует специальное числовое значение NaN, которое относится к этому типу данных.
// NaN (Not A Number)

// NaN означает вычислительную ошибку. Это результат неправильной или
// неопределённой математической операции, например умножения строки на число:
console.log( "xxx" * 2 ); // Выведет NaN

//      ---Булевый тип (Boolean)
// Может принимать только два значения: true (истина) или false (ложь).
// Булевый тип используется для представления результатов логических операций.
// Подробнее мы рассмотрим его в уроке "Логические операторы".

// Пример:
console.log(2 > 1); // Выведет: true
console.log(9 < 3); // Выведет: false

//      ---undefined
// Если вы ничего не присвоили переменной, ее значение автоматически
// становится undefined, т.е. "неопределенным".
// Тип undefined содержит только значение undefined.

// let num;
// console.log(num); // Выведет: undefined

//      ---null
// Если вам необходимо явно указать отсутствие значения у переменной,
// вы присваиваете ей значение null. Тип null содержит только значение null.

let age = null;


                                        // Динамическая типизация

//Переменные в JavaScript могут быть переназначены для хранения значений разных типов.
// Например, переменная, которая изначально содержала строку,
// может быть переопределена для хранения числа.

let variablee = "hello";
variablee = 155; // не ошибка

// Языки программирования, в которых такое возможно, называются «динамически типизированными».

// JavaScript – динамически типизированный язык, то есть язык, в котором
// в различных участках программы одна и та же переменная может принимать значения разных типов.