                                        // Операторы сравнения


// В JavaScript операторы сравнения используются для сравнения значений и возвращают
// логическое значение true (истина) или false (ложь). Основные операторы сравнения:

// Больше (>)
// Меньше (<)
// Больше или равно (>=)
// Меньше или равно (<=)

// Пример:
let x = 5;
let y = 10;

console.log(x > y); // Выведет: false
console.log(x < y); // Выведет: true
console.log(x >= 5); // Выведет: true
console.log(y <= 10); // Выведет: true

// Мы можем присвоить переменной результат сравнения (true или false):
let isGreater = 1 > 2;

console.log(isGreater); // Выведет false


// Сравнение разных типов данных


// При сравнении значений разных типов JavaScript приводит каждое из них к числу.
console.log( '10' > 5 ); // true, строка '10' становится числом 10


                                        // Приоритет операторов сравнения


// Операторы сравнения имеют одинаковый приоритет по отношению друг к другу и
// выполняются слева направо. Операторы сравнения имеют более низкий приоритет
// по отношению к арифметическим операторам. Пример:
let result = 8 - 2 < 5 + 10;
console.log(result); // Выведет true

// В этом выражении сначала будет выполнено вычитание: 8 - 2 = 6, затем
// сложение: 5 + 10 = 15, а затем будет выполнено сравнение 6 < 15, что вернет true.
// В конечном итоге, значение true присвоится переменной result.


                                        // Нестрогое равенство (==) и строгое равенство (===)


// Операторы нестрогого равенства (==) и строгого равенства (===)
// позволяют проверить, равны ли два значения. Отличие между ними:

// Нестрогое равенство (2 знака «=») – оператор автоматически приводит оба операнда к числу.

// Строгое равенство (3 знака «=») – оператор НЕ приводит операнды к числу.

// Пример:
// у числа 5 тип данных Number
// у строки “5” тип данных String

console.log(5 == "5"); // true, оператор привел строку "5" в число 5, а число 5 равно числу 5
console.log(5 == 5) // true, число 5 равно числу 5
console.log(5 == '6'); // false, оператор привел строку "6" в число 6, но число 5 не равно числу 6

console.log(5 === '5'); // false, типы данных разные
console.log(5 === 5); // true, типы данных одинаковые и значения равные
console.log(5 === 6); // false, типы данных одинаковые, но число 5 не равно числу 6

// Логическое значение true становится 1, а false – 0.
console.log(true == 1); // true, оператор приводит true к числу 1, число 1 равно числу 1
console.log(false == 0); // true, оператор приводит false к числу 0, число 0 равно числу 0
console.log(false == true); // false, 0 не равно 1

// Неравенство (!=) Возвращает true, если значения различаются, тип данных не имеет значения.
// Строгое неравенство (!==) Возвращает true, если значения или тип данных отличаются.
console.log(5 != "5"); // false, оператор привел "5" к числу 5, значения равны, неравенство не сохраняется
console.log(5 !== "5"); // true, типы данных разные, поэтому неравенство сохраняется


                                        // Приоритет операторов


// Операторы ==, ===, !=, !== имеют одинаковый приоритет по отношению друг к другу
// и более низкий приоритет по отношению к операторам сравнения <, <=, >, >=,
// а следовательно и более низкий приоритет по отношению к арифметическим операторам. Пример:

let compar = 5 > 4 === 7 <= 9;
console.log(compar); // true
// 5 > 4: Это выражение сравнивает, верно ли, что 5 больше чем 4. Результат сравнения - true.
// 7 <= 9: Это выражение сравнивает, верно ли, что 7 меньше или равно 9. Результат сравнения - true.

// true === true: Здесь оператор === сравнивает два значения на строгое равенство.
// Поскольку оба операнда равны true, результат сравнения - true.


                                        // Пример с арифметическим оператором:

let compar = 5 + 4 === 7 <= 9;
console.log(compar); // false
// 5 + 4: Выражение сложения, результат которого равен 9.
// 7 <= 9: Выражение сравнения, которое проверяет, верно ли, что 7 меньше или равно 9. Результат сравнения - true.
// Теперь у нас есть два результата: 9 и true. Остается выполнить операцию сравнения равенства:

// 9 === true: Оператор === проверяет на равенство и строгое равенство.
// Поскольку значения разные (число и булево значение),
// результат сравнения равенства будет false.


                                        // Совет


// Избегайте нестрогих сравнений при работе с разными типами данных, чтобы избежать
// неочевидных и ошибочных результатов. Вместо этого, используйте строгое равенство
// и строгое неравенство (=== и !==), чтобы убедиться, что значения и типы данных идентичны.