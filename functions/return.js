// Возврат значения


// Возврат значения функции — это когда функция выполняет свои операции и
// возвращает результат обратно в то место программы, где она была вызвана.
// Внутри функции используется ключевое слово return.

// То есть, вы вызываете функцию, она что-то делает и возвращает вам ответ,
// который вы можете использовать дальше в программе.

// Когда мы вызываем функцию и хотим сохранить то, что она возвращает,
// мы используем переменную для хранения этого значения.

// Пример:
function multiplyNumbers(a, b) {
  return a * b; // Возвращает результат умножения a на b
}

let result = multiplyNumbers(5, 3); // Вызываем функцию и сохраняем результат в переменной result

console.log(result); // Выведет 15, так как результат умножения 5 на 3 равен 15

// Приведенный выше код можно записать и так:
function multiplyNumbers(a, b) {
  console.log(a * b);
}

multiplyNumbers(5, 3);

// Однако, тогда мы не сможем сохранить результат выполнения
// функции и использовать его в другой части кода.

// Пример:
let x = Number(prompt());
let y = Number(prompt());

power = Number(prompt());

function multiplyNumbers(a, b) {
  return a * b; // Возвращает результат умножения a на b
}

let result = multiplyNumbers(x, y);

console.log(result ** power); // Выводит результат возведения произведения, а и b в степень power

// В функции может быть несколько операторов return
function checkAge(age) {

  if (age >= 18) {
    return 'совершеннолетний';
  } else {
    return 'несовершеннолетний';
  } }

// Но что, если несколько return будут идти подряд? Как только выполнение доходит до return,
// функция немедленно останавливается, и значение возвращается в вызвавший её код.
// То есть, в функции может быть несколько идущих подряд операторов return.
// Однако всегда выполняется только тот, которого первым достигнет поток выполнения. Пример:

function multiplyNumbers(a, b) {
  return 10;
  return a * b;

}
let result = multiplyNumbers(5, 3);
console.log(result); // Вывод 10