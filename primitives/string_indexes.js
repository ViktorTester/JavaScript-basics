                                        // Индексы строки


// Строка – это последовательность символов, у каждого из которых есть свой индекс.
// Индексы строки — это числовые значения, которые присвоены каждому символу в строке.

// Индексация символов начинается с нуля, то есть первому символу строки
// соответствует индекс 0, второму символу - индекс 1, и так далее.

// Для строки Hello:
// Символ “H” соответствует индексу 0
// Символ “e” соответствует индексу 1
// Символ “o” соответствует индексу 4

// Обратите внимание, что длина строки, которую мы получаем с помощью
// свойства length – это количество символов, а не индекс последнего символа.


                                        // Доступ к символам


// Доступ к отдельным символам строки можно получить, обращаясь к ним по индексу.
// Для доступа к символу в строке используйте квадратные скобки [] и указывайте индекс
// символа внутри них. Внутри квадратных скобок допускается выражение.

// Пример:
let a = 1
const myString = "Нефтеперегоньевск";


console.log(myString[0]); // Выведет "Н" - первый символ
console.log(myString[1 + a]); // Выведет "ф" - символ с индексом 2
console.log(myString[-1]); // Выведет: undefined - отрицательный индекс не допустим
console.log(myString[20]) // Выведет: undefined - символа с индексом 20 не существует
console.log(myString[myString.length - 1]); // Выведет "к" - последний символ

// В последней строке мы использовали свойство length для получения длины строки
// и отняли от нее 1, чтобы получить индекс последнего символа.

// Строки являются неизменяемыми данными. После создания строки её нельзя изменить:

let myString = "Hello";
myString[0] = "W"; // Это не изменит строку, останется "Hello"

// Однако можно создать новую строку с измененными символами с помощью метода replace():
const newString = myString.replace("H", "W"); // Создает новую строку "Wello"
console.log(myString); // Выведет: "Hello", значение myString не изменилось
console.log(newString); // Выведет: "Wello"


                                        // Получение подстроки


// Получение подстроки в JavaScript означает извлечение части строки из исходной
// строки. Для этого используется метод substring() или метод slice().

// Простыми словами, чтобы получить подстроку, вы указываете начальный и
// конечный индексы, которые определяют, какая часть строки будет вырезана.

const myString = "Домодедово";

// Получаем подстроку с индекса 0 до 2 (не включая 3)
const subString1 = myString.substring(0, 3);
console.log(subString1); // Выведет: "Дом"


// Получаем подстроку с индекса 3 до 7 (не включая 8)
const subString2 = myString.slice(3, 8);

console.log(subString2); // Выведет: "одедо"

// Получаем подстроку с индекса 8 до конца строки
const subString3 = myString.substring(8);
console.log(subString3); // Выведет: "во"

// Главное отличие между substring() и slice() заключается в обработке отрицательных индексов:
// substring() автоматически меняет местами отрицательные значения индексов на 0.
// slice() позволяет использовать отрицательные индексы для обратного отсчета с конца строки.

// Пример:

const myString = "Hello, World!";
console.log(myString.substring(-5)); // то же, что myString.substring(0)
console.log(myString.slice(-5)); // извлекает последние 5 символов