                                            // Объект


// Как мы помним, в JavaScript существуют примитивные и составные типы данных.
// Объект — это составной тип данных, который позволяет объединить
// несколько значений и функций в одну сущность.

// Можно представить объект, как "контейнер", который может хранить информацию (свойства)
// и действия (методы). Сейчас остановимся на свойствах, о методах узнаем в уроке 6.3

// Пример объекта box с тремя свойствами:
const box = {
  ball: "red",
  pen: "plastic",
  bottle: "full",
};


                                        // Объявление и свойства


// Объект может быть создан с помощью фигурных скобок {} с необязательным списком свойств.
// Такой способ объявления называется литеральной нотацией.

// Свойство – это пара «ключ: значение», где ключ — это имя свойства,
// а значения — это данные, которые связаны с этим именем.

// Ключ может быть представлен только Строкой (или Символом),
// а значение может быть любого типа данных.

// Объект можно представить как человека, у которого есть свои характеристики:

const person = {
  name: "Вася", // свойства перечисляются через запятую
  age: 97,
  isStudent: true,
}; // после закрытия фигурной скобки ставится точка с запятой


// В этом примере у нас есть объект person с тремя свойствами:
// name со значением "Вася",
// age со значением 97,
// isStudent со значением true.

// Вы можете вывести объект полностью. Пример:

console.log(person);
// Вывод:
// { name: 'Вася', age: 97, isStudent: true }


                                        // Обращение к свойствам


// Гораздо чаще придётся обращаться к какому-либо свойству объекта.
// Иными словами, получить значение свойства по его имени.

// Выполнить это можно с помощью оператора точки (.).

// Синтаксис:
// объект.свойство // данная инструкция ВОЗВРАЩАЕТ значение свойства

// Пример:
const person = {
  name: "Вася",
  age: 97,
  isStudent: true,
};

console.log(person.isStudent); // Выведет true
console.log(person.name, person.age); // Выведет "Вася 97"


                                        // Важно


// Объект должен быть объявлен до обращения к его свойствам.
// Обращение к свойству перед объявлением вызовет ошибку:
console.log(person.name);
const person = {name: "Василий"}; // ошибка

// При обращении к несуществующему свойству объекта вернется значение undefined:
const person = {name: "Василий"};
console.log(person.age); // Выведет undefined


                                        // Переменные в свойствах


// Значения свойств могут быть переменными. Пример:
let var1 = prompt()
let var2 = Number(prompt());

const person = {
  name: var1, // !переменные записываются без кавычек
  age: var2,
};

// Можно записать и так:
let name = prompt()
let age = Number(prompt());

const person = {
  name: name, // name до ":" является именем свойства, а name после ":" - значением свойства
  age: age,
};

// Подобная запись свойств встречается крайне часто, поэтому в JavaScript
// предусмотрена сокращенная запись свойств типа name: name :
let name = prompt()
let age = Number(prompt());

const person = {
  name,
  age,
};


// Теперь, чтобы обратиться к свойству нужно просто использовать инструкцию объект.свойство. Пример:
console.log(person.name) // Выведется имя, введенное пользователем