// Цикл for

// Цикл for в JavaScript - это управляющая конструкция, которая позволяет
// выполнять один и тот же блок кода несколько раз, до тех пор,
// пока выполняется определенное условие.

// for обычно используется, когда известно количество итераций, в то время,
// как while удобен, когда количество итераций заранее неизвестно и зависит от условия.

// Однако обе конструкции взаимозаменяемы.

// Синтаксис for:

for (начало; условие; шаг) {
  // Тело цикла
}

// --начало: используется для установки начального значения счетчика.
// --условие: выполняется перед каждой итерацией цикла. Если условие истинно,
// то тело цикла выполняется; если условие ложно, цикл прерывается.
// --шаг: выполняется после каждой итерации цикла и используется для обновления счетчика.

// Пример:
for (let i = 1; i <= 5; i++) {

  console.log("Это итерация номер", i);

}
// 1. Создание переменной i и присвоение ей начального значения 1. В цикле мы
// будем использовать переменную i для отслеживания текущего числа.

// 2. Проверка условия: i <= 5. Перед каждой итерацией цикла проверяется это условие.
// На первой итерации i равно 1, и условие 1 <= 5 является истинным, поэтому цикл начинает выполняться.

// 3. Вывод сообщения: console.log("Это итерация номер", i);. Внутри цикла у нас есть команда
// console.log(), которая выводит сообщение в консоль браузера. На первой итерации, i равно 1,
// поэтому выводится сообщение "Это итерация номер 1".

// 4. Обновление значения переменной i. Шаг i++ увеличивает значение
// i на 1 после каждой итерации. Теперь i становится равно 2.

// 5. Вторая итерация: Проверка условия i <= 5. На этот раз i равно 2, и условие 2 <= 5
// также является истинным, поэтому выполняется вторая итерация.

// 6. Вывод сообщения: console.log("Это итерация номер", i);. На второй итерации,
// i равно 2, и выводится сообщение "Это итерация номер 2".

// 7. Обновление значения переменной i. Шаг i++ увеличивает значение i на 1. Теперь i становится равно 3.

// 8. Этот процесс повторяется для i равного 3, 4 и 5, что приводит к выполнению еще трех
// итераций, каждая из которых выводит соответствующее сообщение.

// 9. На шестой итерации, i становится равно 6.

// 10. Проверка условия i <= 5. Теперь 6 <= 5 является ложным, потому что 6 не
// меньше или равно 5. В этот момент цикл завершается,
// и выполнение продолжается с кодом, следующим за циклом.

// 11. Вывод сообщения: console.log("Это итерация номер", i);
// больше не выполняется, потому что цикл уже закончил свою работу.


// В результате, в консоль будет выведено:

// Это итерация номер 1
// Это итерация номер 2
// Это итерация номер 3
// Это итерация номер 4
// Это итерация номер 5

// Напомню, что запись i++ это то же, что и i += 1.
// Если мы хотим увеличить шаг мы будем использовать i += 2, i += 3 и т.д.